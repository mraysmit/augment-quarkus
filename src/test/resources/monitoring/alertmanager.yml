global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@trading-company.com'
  smtp_auth_username: 'alerts@trading-company.com'
  smtp_auth_password: 'password'

route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    # Critical alerts go to on-call team immediately
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m
      
    # Business alerts go to trading team
    - match:
        category: business
      receiver: 'trading-team'
      group_interval: 5m
      repeat_interval: 30m
      
    # Performance alerts go to platform team
    - match:
        category: performance
      receiver: 'platform-team'
      group_interval: 2m
      repeat_interval: 15m
      
    # SLA alerts go to management
    - match:
        category: sla
      receiver: 'sla-alerts'
      group_wait: 0s
      repeat_interval: 10m

receivers:
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://webhook-service:5001/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'webhook_user'
            password: 'webhook_password'

  - name: 'critical-alerts'
    email_configs:
      - to: 'oncall@trading-company.com'
        from: 'alerts@trading-company.com'
        smarthost: 'localhost:587'
        auth_username: 'alerts@trading-company.com'
        auth_password: 'password'
        headers:
          Subject: 'ðŸš¨ CRITICAL: {{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
          Priority: 'high'
        html: |
          <h2>Critical Alert</h2>
          {{ range .Alerts }}
          <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
          <p><strong>Service:</strong> {{ .Labels.service }}</p>
          <p><strong>Runbook:</strong> <a href="{{ .Annotations.runbook_url }}">{{ .Annotations.runbook_url }}</a></p>
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#critical-alerts'
        title: 'ðŸš¨ Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Runbook:* {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true
    pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
        description: '{{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'

  - name: 'trading-team'
    email_configs:
      - to: 'trading-team@trading-company.com'
        from: 'alerts@trading-company.com'
        headers:
          Subject: 'ðŸ“Š Trading Alert: {{ .GroupLabels.alertname }}'
        html: |
          <h2>Trading Alert</h2>
          {{ range .Alerts }}
          <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><strong>Service:</strong> {{ .Labels.service }}</p>
          <p><strong>Category:</strong> {{ .Labels.category }}</p>
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#trading-alerts'
        title: 'ðŸ“Š Trading Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          {{ end }}

  - name: 'platform-team'
    email_configs:
      - to: 'platform-team@trading-company.com'
        from: 'alerts@trading-company.com'
        headers:
          Subject: 'âš¡ Performance Alert: {{ .GroupLabels.alertname }}'
        html: |
          <h2>Performance Alert</h2>
          {{ range .Alerts }}
          <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><strong>Service:</strong> {{ .Labels.service }}</p>
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#platform-alerts'
        title: 'âš¡ Performance Alert: {{ .GroupLabels.alertname }}'

  - name: 'sla-alerts'
    email_configs:
      - to: 'management@trading-company.com,sre-team@trading-company.com'
        from: 'alerts@trading-company.com'
        headers:
          Subject: 'ðŸ“ˆ SLA Alert: {{ .GroupLabels.alertname }}'
          Priority: 'high'
        html: |
          <h2 style="color: red;">SLA BREACH DETECTED</h2>
          {{ range .Alerts }}
          <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><strong>Service:</strong> {{ .Labels.service }}</p>
          <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
          <p>This alert indicates a potential SLA breach that requires immediate attention.</p>
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#sla-alerts'
        title: 'ðŸ“ˆ SLA Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          ðŸš¨ *SLA BREACH DETECTED* ðŸš¨
          
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Runbook:* {{ .Annotations.runbook_url }}
          {{ end }}

inhibit_rules:
  # Inhibit warning alerts if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service']
    
  # Inhibit individual component alerts if application is down
  - source_match:
      alertname: 'TradingApplicationDown'
    target_match_re:
      alertname: '(HighTradeErrorRate|HighTradeCreationTime|DatabaseConnectionPoolExhaustion)'
    equal: ['service']
